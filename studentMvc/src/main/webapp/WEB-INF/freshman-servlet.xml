<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="myProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="locations">
                <beans:value>classpath:application.properties</beans:value>
        </beans:property>
	</beans:bean>
	
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://localhost:3306/studentregister?serverTimezone=UTC" />
		<beans:property name="username" value="brucekuo" />
		<beans:property name="password" value="${database.password}" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.brucekuo.model.Course</beans:value>
				<beans:value>com.brucekuo.model.Student</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="studentDao" class="com.brucekuo.dao.impl.StudentDaoImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<context:component-scan base-package="com.brucekuo" />
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	
	 <beans:bean id="httpClient" class="org.apache.http.impl.client.DefaultHttpClient">
        <beans:constructor-arg>
            <beans:bean class="org.apache.http.impl.conn.PoolingClientConnectionManager"/>
        </beans:constructor-arg>
    </beans:bean>
    
    <util:list id="messageConvertersList">
        <beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
    </util:list>  
	
	<beans:bean id="restTemplate" class="org.springframework.web.client.RestTemplate"
          p:messageConverters-ref="messageConvertersList">
        <beans:constructor-arg>
            <beans:bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
                <beans:constructor-arg ref="httpClient"/>
            </beans:bean>
        </beans:constructor-arg>
    </beans:bean>

</beans:beans>
